#!/usr/bin/env node

var path = require('path');
var fs = require('fs-extra');
var nodemon = require('nodemon');
var open = require('opn');
var color = require('colors');
var configHandler = require('../libs/config-handler');
var utils = require('../libs/utils');
var JavaServer = require('../libs/java-server');
var program = require('commander');
var findup = require('findup-sync');


program
	.version(require('../package.json').version, '-v --version')
	.usage('<command> [options]')
	.option('-o --open', 'open site in browser after server startup');


program
	.command('init [name]')
	.description('initial the project')
	.action(init);

program
	.command('')
	.description('startup server');

program.parse(process.argv);

if (!program.args.length) server();


function init(name, opts) {
	var dest = process.cwd();
	if (name) dest = path.resolve(dest, name);

	fs.copy(path.resolve(__dirname, '../example'), dest, function (err) {
		if (err) {
			console.error(err.red);
			return;
		}
		console.log('Project inited.'.green);
	});
}

function server() {
	var configFile = findup('fds-config.js');
	var opened = false;

	if (!configFile) {
		console.log('[Error] '.red + configFileName.magenta + ' is not found in path.');
		return;
	}

	var config = configHandler(configFile);

	if (!fs.existsSync(config.routeFile)) {
		console.log('[Error]'.red + ' Route file is not found.');
		return;
	}

	nodemon({
		script: path.resolve(__dirname, '../index.js'),
		watch: [
			config.routeFile,
			configFile
		],
		ext: 'js json'
	});

	if (config.enableJava) JavaServer.create(config);

	nodemon.on('start', function () {
		if (!opened && program.open) {
			setTimeout(function () {
				var url = 'http://localhost:' + config.port + (config.open.route || '/');
				open(url, {app: config.open.browser});
				opened = true;
			}, 1200);
		}
	});

	nodemon.on('restart', function (files) {
		console.log('FE Dev Server is restarting ....'.cyan);

		if (utils.contains(files, configFile)) {
			config = configHandler(configFile, true);

			if (config.enableJava)
				JavaServer.restart(config);
			else
				JavaServer.close();
		}
	});

	process.on('SIGINT', function () {
		console.log('FE Dev Server is stopped.'.green);
		process.exit();
	});
}

